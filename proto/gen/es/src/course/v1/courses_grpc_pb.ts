// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file course/v1/courses_grpc.proto (package course.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Course } from "./course_pb.js";

/**
 * @generated from message course.v1.ListCoursesRequest
 */
export class ListCoursesRequest extends Message<ListCoursesRequest> {
  constructor(data?: PartialMessage<ListCoursesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "course.v1.ListCoursesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCoursesRequest {
    return new ListCoursesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCoursesRequest {
    return new ListCoursesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCoursesRequest {
    return new ListCoursesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListCoursesRequest | PlainMessage<ListCoursesRequest> | undefined, b: ListCoursesRequest | PlainMessage<ListCoursesRequest> | undefined): boolean {
    return proto3.util.equals(ListCoursesRequest, a, b);
  }
}

/**
 * @generated from message course.v1.ListCoursesResponse
 */
export class ListCoursesResponse extends Message<ListCoursesResponse> {
  /**
   * @generated from field: repeated course.v1.Course courses = 1;
   */
  courses: Course[] = [];

  constructor(data?: PartialMessage<ListCoursesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "course.v1.ListCoursesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "courses", kind: "message", T: Course, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCoursesResponse {
    return new ListCoursesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCoursesResponse {
    return new ListCoursesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCoursesResponse {
    return new ListCoursesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListCoursesResponse | PlainMessage<ListCoursesResponse> | undefined, b: ListCoursesResponse | PlainMessage<ListCoursesResponse> | undefined): boolean {
    return proto3.util.equals(ListCoursesResponse, a, b);
  }
}

